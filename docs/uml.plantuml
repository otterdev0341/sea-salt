@startuml "sea-salt-uml"
title Example with Packages

package "dto" {
    package "user_dto" {

        class ReqCreateUserDto{
            - email : String 'validation: email format
            - password : String 'validation: regx 1 upper, 1 lower, 1 number, 1 special char, min 8 chars 
            - username : String  'not null, unique in db
            - firstName: String 'not null
            - lastName: String 'not null
            - gender: String 'in male, female, other
            - dob: String 'date format yyyy-MM-dd
        }

        class ResEntryUserDto{
            - id : uuid 'generated by db
            - email: String
            - username: String
            - firstName: String
            - lastName: String
            - gender: String
            - dob: String
            - createdAt: String 'date format yyyy-MM-dd'T'HH:mm:ss.SSSZ
            - updatedAt: String 'date format yyyy-MM-dd'T'HH:mm:ss.S
        }

        class ReqLoginDto{
            - email: String 'valid format
            - password: String 'not null
        }

        class ResLoginDto{
            - username: String
            - token: String
        }

        class ReqChangePasswordDto{
            - oldPassword: String 'not null
            - newPassword: String 'validation: regx 1 upper, 1 lower, 1 number, 1 special char, min 8 chars
        }

        class ReqChangeUserNameDto{
            - newUsername: String 'not null, unique in db
        }

        class ReqChangeUserInfoDto{
            - firstName: String 'not null
            - lastName: String 'not null
            - dob: String 'date format yyyy-MM-dd
            - gender: String 'in male, female, other
        }
    }

    package "response_dto" {
        abstract class OtterResponseDto {
            - status: String
            + getStatus(): String
         }

        ' Success response subclass with generic T
        class SuccessResponseDto<T> {
            - data: T
            + getData(): T
        }

        ' Error response subclass
        class ErrorResponseDto {
            - operation: String
            - message: String
            + getOperation(): String
            + getMessage(): String
        }
    }
}

package "controller" {
    package "user ops" {
        class UserOperations{
            + register(user: ReqCreateUserDto): Result<ResEntryUserDto, ErrorResponseDto>
            + login(user: ReqLoginDto): Result<ResLoginDto, ErrorResponseDto>
            + changePassword(user: ReqChangePasswordDto): Result<void(), ErrorResponseDto>
            + changeUsername(user: ReqChangeUserNameDto): Result<ResEntryUserDto, ErrorResponseDto>
            + changeUserInfo(user: ReqChangeUserInfoDto): Result<ResEntryUserDto, ErrorResponseDto>
        }
        
    }
    
}

package "service" {

}

package "req_impl_reporitory" {

}

package "repository" {
    class UserRepository {
        + findById(id: int): UserDTO
    }
    class ProductRepository {
        + findById(id: int): ProductDTO
    }
}

' Relationships
UserController --> UserRepository
ProductController --> ProductRepository
UserRepository ..> UserDTO
ProductRepository ..> ProductDTO
OtterResponseDto <|-- SuccessResponseDto
OtterResponseDto <|-- ErrorResponseDto
@enduml
